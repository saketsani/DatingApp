{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { ReplaySubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AppService = /*#__PURE__*/(() => {\n  class AppService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'https://localhost:44327/api/';\n      this.currentUserSource = new ReplaySubject(1);\n      this.currentUser$ = this.currentUserSource.asObservable();\n    }\n\n    UsersService() {\n      return this.http.get(this.baseUrl + 'users');\n    }\n\n    login(body) {\n      return this.http.post(this.baseUrl + 'account/login', body).pipe(map(response => {\n        const user = response;\n\n        if (user) {\n          localStorage.setItem('user', JSON.stringify(user));\n          this.currentUserSource.next(user);\n        }\n      }));\n    }\n\n    register(body) {\n      return this.http.post(this.baseUrl + 'account/register', body).pipe(map(user => {\n        if (user) {\n          localStorage.setItem('user', JSON.stringify(user));\n          this.currentUserSource.next(user);\n        }\n\n        return user;\n      }));\n    }\n\n    setCurrentUSer(user) {\n      this.currentUserSource.next(user);\n    }\n\n    logout() {\n      localStorage.removeItem('user');\n      this.currentUserSource.next(null);\n    }\n\n  }\n\n  AppService.ɵfac = function AppService_Factory(t) {\n    return new (t || AppService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AppService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppService,\n    factory: AppService.ɵfac,\n    providedIn: 'root'\n  });\n  return AppService;\n})();","map":null,"metadata":{},"sourceType":"module"}