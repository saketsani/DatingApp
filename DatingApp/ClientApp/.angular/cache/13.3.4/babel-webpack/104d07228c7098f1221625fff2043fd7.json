{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/app.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/forms\";\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(_service, toastr) {\n      this._service = _service;\n      this.toastr = toastr;\n      this.cancelRegister = new EventEmitter(); //updatedChildComponent: boolean =false;\n\n      this.model = {};\n    }\n\n    ngOnInit() {// console.log('Users from home component', this.usersFromHomeComponent);\n    }\n\n    register() {\n      this._service.register(this.model).subscribe(res => {\n        console.log(res);\n        this.toastr.success(\"Successfully Registered\");\n        this.cancel();\n      }, error => {\n        console.log(error);\n        this.toastr.error(error.error);\n      });\n    }\n\n    cancel() {\n      this.cancelRegister.emit(false);\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AppService), i0.ɵɵdirectiveInject(i2.ToastrService));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    outputs: {\n      cancelRegister: \"cancelRegister\"\n    },\n    decls: 13,\n    vars: 2,\n    consts: [[\"autocomplete\", \"off\", 3, \"ngSubmit\"], [\"registerForm\", \"ngForm\"], [1, \"text-center\", \"text-primary\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"username\", \"placeholder\", \"User Name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", \"mt-2\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"m-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", \"m-2\", 3, \"click\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵelementStart(2, \"h2\", 2);\n        i0.ɵɵtext(3, \"Sign Up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"hr\");\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.model.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.model.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"button\", 7);\n        i0.ɵɵtext(10, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_11_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(12, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.model.username);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.model.password);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}